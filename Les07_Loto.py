# Дано (mod):
# Результат - описание правил игры в лото.
# В игре 2 игрока: пользователь и компьютер. Каждому в начале выдается случайная карточка.
# Каждая карточка содержит 3 строки по 9 клеток. В каждой строке по 5 случайных цифр,
# расположенных по возрастанию. Все цифры в карточке уникальны. Пример карточки:
# --------------------------
#     9 43 62          74 90
#  2    27    75 78    82
#    41 56 63     76      86
# --------------------------
# Количество бочонков — 90 штук (с цифрами от 1 до 90).
# Каждый ход выбирается один случайный бочонок и выводится на экран. Также выводятся карточка игрока и карточка компьютера.
# Пользователю предлагается зачеркнуть цифру на карточке или продолжить. Если игрок выбрал "зачеркнуть":
# Если цифра есть на карточке - она зачеркивается и игра продолжается.
# Если цифры на карточке нет - игрок проигрывает и игра завершается.
# Если игрок выбрал "продолжить": \
# Если цифра есть на карточке - игрок проигрывает и игра завершается. Если цифры на карточке нет - игра продолжается.
# Побеждает тот, кто первый закроет все числа на своей карточке.


# Шаг №1: Описываем итератор и генератор случайных бочонков(kegs)

import random

class Keg:
    def __init__(self, total=90):
        self.i = 1
        self.kegs = [x for x in range(1,total+1)]
        self.dropped = []

    def __next__(self):
        self.i += 1
        if self.i <= 91:
        	y = random.randint(0, len(self.kegs)-1)
        	keg = self.kegs[y]
        	print(len(self.kegs), len(self.dropped))
        	self.dropped.append(self.kegs[y])
        	self.kegs.remove(self.kegs[y])
        	return keg
        else:
            raise StopIteration

class Kegs_random_choice:

    def __init__(self, total=90):
        self.total = total

    def __iter__(self):

        return Keg(self.total)